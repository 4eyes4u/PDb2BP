#include <stdio.h>
#include <stdlib.h>

EXEC SQL INCLUDE SQLCA;

EXEC SQL BEGIN DECLARE SECTION;
short suma; 
sqlint32 id_smera;
sqlint32 indeks;
char datum[11];
EXEC SQL END DECLARE SECTION;

void is_error(const char* err)
{
    if (SQLCODE < 0)
    {
        printf("SQLCODE %d: %s\n\n", SQLCODE, err);
        exit(EXIT_FAILURE);
    }
}

int main()
{
    EXEC SQL CONNECT TO vstud USER student USING abcdef;  
    is_error("Konekcija na bazu");
    
    EXEC SQL 
        DECLARE najvisePolozenih CURSOR FOR 
        WITH POMOCNA AS (
            SELECT      D.ID_SMERA, 
                        D.INDEKS, 
                        SUM(P.BODOVI) SUMA
            FROM        DOSIJE D JOIN
                        ISPIT I ON I.INDEKS = D.INDEKS JOIN
                        PREDMET P ON P.ID_PREDMETA = I.ID_PREDMETA
            WHERE       OCENA > 5 AND
                        STATUS_PRIJAVE = 'o'
            GROUP BY    D.ID_SMERA, 
                        D.INDEKS
        )
        SELECT      POM.SUMA, 
                    D.INDEKS, 
                    POM.ID_SMERA    
        FROM        POMOCNA POM JOIN
                    DOSIJE D ON D.INDEKS = POM.INDEKS 
        WHERE       POM.SUMA IN (
                        SELECT  MAX(SUMA) 
                        FROM    POMOCNA POM1 
                        WHERE   POM1.ID_SMERA = POM.ID_SMERA
                    )
        ORDER BY    ID_SMERA;
    is_error("Deklaracija kursora - najvisePolozenih");
    
    EXEC SQL 
        DECLARE poslednji_ispit CURSOR FOR 
        WITH POMOCNA AS (
            SELECT      I.INDEKS, 
                        MAX(COALESCE(DATUM_USMENOG, DATUM_PISMENOG)) DATUM_PRVOG
            FROM        ISPIT I JOIN
                        DOSIJE D ON D.INDEKS = I.INDEKS
            WHERE       OCENA > 5 AND
                        STATUS_PRIJAVE = 'o'
            GROUP BY    I.INDEKS
        )
        SELECT  I.INDEKS
        FROM    ISPIT I
        WHERE   I.INDEKS = :indeks AND
                EXISTS (
                    SELECT  * 
                    FROM    POMOCNA PO 
                    WHERE   PO.INDEKS = I.INDEKS AND
                            PO.DATUM_PRVOG = COALESCE(I.DATUM_USMENOG, I.DATUM_PISMENOG)
                )
        FOR     UPDATE OF NAPOMENA;
    is_error("Deklaracija kursora - poslednji_ispit");
    
    EXEC SQL OPEN najvisePolozenih;
    is_error("Otvaranje kursora - najvisePolozenih");

    while(1)
    {
        EXEC SQL 
            FETCH   najvisePolozenih                
            INTO    :suma, 
                    :indeks, 
                    :id_smera;
        is_error("Dohvatanje podataka iz kursora - najvisePolozenih");

        if(SQLCODE == 100)
        {
            break;
        }
        
        // Stampamo informaciju o studentu koji ima najvise kredita na smeru
        printf("Student sa brojem indeksa %d na smeru %d ima polozeno %d bodova!\n", 
            indeks, id_smera, suma);
        
        EXEC SQL OPEN poslednji_ispit;
        is_error("Otvaranje kursora - poslednji_ispit");
        
        while(1)
        {
            EXEC SQL 
                FETCH   poslednji_ispit
                INTO    :indeks, 
                        :datum;
            is_error("Dohvatanje podataka iz kursora - poslednji_ispit");

            if(SQLCODE == 100)
            {
                break;
            }
            
            EXEC SQL 
                UPDATE  ISPIT
                SET     NAPOMENA = 'Ovo je student koji ima najvise polozenih kredita na svom smeru'
                WHERE   CURRENT OF poslednji_ispit;
            is_error("Azuriranje tabele ispit");
        }
        
        EXEC SQL CLOSE poslednji_ispit;
        is_error("Zatvaranje kursora - poslednji_ispit");
    }

    EXEC SQL CLOSE najvisePolozenih;
    is_error("Zatvaranje kursora - najvisePolozenih");

    EXEC SQL CONNECT RESET;
    is_error("Diskonekcija sa baze");
    
    return 0;
}